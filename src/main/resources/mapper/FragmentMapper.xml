<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.forge.gami.note.mapper.FragmentMapper">

    <resultMap id="FragmentResultMap" type="com.forge.gami.note.model.Fragment">
        <id property="id" column="id"/>
        <result property="filename" column="filename"/>
        <result property="filePath" column="file_path"/>
        <result property="fileType" column="file_type"/>
        <result property="fileSize" column="file_size"/>
        <result property="noteId" column="note_id"/>
        <result property="description" column="description"/>
        <result property="sortOrder" column="sort_order"/>
        <result property="type" column="type"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="selectById" resultMap="FragmentResultMap">
        SELECT * FROM fragments WHERE id = #{id}
    </select>

    <select id="selectAll" resultMap="FragmentResultMap">
        SELECT * FROM fragments ORDER BY created_at DESC
    </select>

    <insert id="insert" parameterType="com.forge.gami.note.model.Fragment" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO fragments (
        filename, file_path, file_type, file_size, note_id, description, created_at, updated_at, sort_order, type
        ) VALUES (
        #{filename}, #{filePath}, #{fileType}, #{fileSize}, #{noteId}, #{description},
        NOW(), NOW(), #{sortOrder}, #{type}
        )
    </insert>

    <update id="update" parameterType="com.forge.gami.note.model.Fragment">
        UPDATE fragments
        SET
            filename = #{filename},
            file_path = #{filePath},
            file_type = #{fileType},
            file_size = #{fileSize},
            note_id = #{noteId},
            description = #{description},
            sort_order = #{sortOrder},
            type = #{type},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE FROM fragments WHERE id = #{id}
    </delete>

</mapper>
